from aiogram import Bot, Dispatcher, types
from aiogram.client.session import aiohttp
from aiogram.fsm.state import StatesGroup, State
from settings import settings

bot = Bot(token=settings.BOT_TOKEN)
dp = Dispatcher(bot)


class AuthStates(StatesGroup):
    waiting_for_email = State()
    waiting_for_password = State()

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ.\n\n"
        "üîπ /register ‚Äì –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è\n"
        "üîπ /login ‚Äì –í–æ–π—Ç–∏"
    )

@dp.message_handler(commands=['register'])
async def register(message: types.Message):
    async with aiohttp.ClientSession() as session:
        async with session.post(
            f"{settings.URL_HOME_SERVICE}/register",
            json={"telegram_id": message.from_user.id, "username": message.from_user.username}
        ) as resp:
            if resp.status == 200:
                await message.reply("‚úÖ –í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
            else:
                await message.reply("‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")

@dp.message_handler(commands=['login'])
async def login(message: types.Message):
    async with aiohttp.ClientSession() as session:
        async with session.post(
            f"{settings.URL_HOME_SERVICE}/token",
            data={"telegram_id": message.from_user.id}
        ) as resp:
            if resp.status == 200:
                token_data = await resp.json()
                await message.reply(f"üîë –í–∞—à —Ç–æ–∫–µ–Ω: `{token_data['access_token']}`", parse_mode="Markdown")
            else:
                await message.reply("‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞")
